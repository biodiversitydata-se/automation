#! /bin/bash
#
# Prepare source snapshot
# =======================
#

# TBD

# 
# ------------------
# 
# usage:
#   prepare_gluster_source_snapshot <options> 
#
#   where 
#         <options> = [-v] [-t] [-name <snapshot_name>] <gluster_volume> <source_mount_point>
#             
#   -v    : verbose output - default false
#   -t    : dry run and only output info  - default false
#   -size : snapshot size  - default 200M
#   -name : snapshot name  - default <volume_name>_backupsnap



# Read arguments and switches
verbose=''
dry_run=''
snapshot_name=''

while true 
do
    case $1 in

	-v) verbose="-v"
	    shift
	    ;;
	-t) dry_run="-t"
	    shift
	    ;;
	-name) snapshot_name=$2
	    shift
	    shift
	    ;;
	*) break	    
	    ;;
    esac
done

gluster_volume=$1
source_mount_point=$2

bin_dir=$(dirname $0)
lib_dir=/opt/sbdi/lib  #${SOMO_LIBDIR:-$bin_dir/../lib}

. $lib_dir/log_utils

log_logging_application="BACKUP"

[ $EUID -eq 0 ] || log_fatal  88 "Root privileges reqiured"

[ -z "$gluster_volume" ] && log_fatal 91 "No gluster volume provided"
[ -z "$source_mount_point" ] && log_fatal 92 "No mount pointprovided"

# Ensure mount point or exit

if [ ! -e $source_mount_point ]
then
   log_info "Mount point ($source_mount_point) does not exist - creating it"
   if ! sudo mkdir -p $source_mount_point
   then
       log_fatal 11 "Unable to create mount point ($source_mount_point) - exiting"
   fi
fi

if [ ! -d $source_mount_point ]
then
    log_fatal 12 "Mount point ($source_mount_point) is not a directory - exiting"
fi

[ -z "$snapshot_name" ] && snapshot_name="${gluster_volume}_backupsnap"

# TODO: Ensure any old snapshots removed?

result=0
deactivate_snapshot_on_exit=false
delete_snapshot_on_exit=false

if ! gluster snapshot create $snapshot_name  $gluster_volume no-timestamp
then
    error=$?
    log_error "Failed to created snapshot ${snapshot_name} of gluster volume ${gluster_volume} - error: ${error}"
    result=91
else
    log_info "Created snapshot ${snapshot_name} of gluster volume ${gluster_volume}"

    if ! gluster snapshot activate $snapshot_name
    then
	error=$?
	log_error "Failed to activte snapshot ${snapshot_name}  of gluster volume ${gluster_volume} - error: ${error}"
	delete_snapshot_on_exit=true
	result=92
    else
	log_info "Activated snapshot ${snapshot_name} of gluster volume ${gluster_volume}"

	if ! mount -t glusterfs localhost:/snaps/$snapshot_name/$gluster_volume $source_mount_point
	then
	    error=$?
	    log_error "Failed to mount snapshot $snapshot_name of gluster volume ${gluster_volume} at $source_mount_point - error: ${error}"
	    deactivate_snapshot_on_exit=true
	    delete_snapshot_on_exit=true
	    result=93
	else
	    log_info "Mounted snapshot $snapshot_name of gluster volume ${gluster_volume} at $source_mount_point"
	fi

    fi
fi
    

if $deactivate_snapshot_on_exit
then
    if echo "y" | gluster snapshot deactivate $snapshot_name
    then
	log_info "Deactivated snapshot ${snapshot_name} of gluster volume ${gluster_volume} "
    else
	error=$?
	log_error "Failed to deactivte snapshot ${snapshot_name} of gluster volume ${gluster_volume} - error: ${error}"
    fi
fi
if $delete_snapshot_on_exit
then
    if echo "y" | gluster snapshot delete $snapshot_name
    then
	log_info "Deleted snapshot $snapshot_name of gluster volume ${gluster_volume}"
    else
	error=$?
	log_error "Failed to delete snapshot $snapshot_name of gluster volume ${gluster_volume} - error: ${error}"
    fi
fi

exit $result


