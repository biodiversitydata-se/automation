- name: Install rsync
  apt:
    pkg: rsync
    
- name: Check if mount point for gluster backup snapshots exists
  stat:
    path: "{{ gluster_backup_source_snapshot_mount_point }}"
  register: gluster_backup_source_snapshot_mount_point_status

- name: Check if mount point for lvm backup snapshots exists
  stat:
    path: "{{ lvm_backup_source_snapshot_mount_point }}"
  register: lvm_backup_source_snapshot_mount_point_status
    
- name: Ensure mount point for gluster backup snapshots (when needed)
  file:
    path: "{{ gluster_backup_source_snapshot_mount_point }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  when: gluster_backup_source and gluster_backup_source_snapshot_mount_point_status.stat.exists == false
    
- name: Ensure mount point for lvm backup snapshots  (when needed)
  file:
    path: "{{ lvm_backup_source_snapshot_mount_point }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  when: lvm_backup_source and lvm_backup_source_snapshot_mount_point_status.stat.exists == false
    
- name: Ensure "/opt/sbdi/backup/bin" folder
  file: 
    path: /opt/sbdi/backup/bin
    owner: root 
    group: root
    mode: 0755 
    state: directory

- name: Install Gluster backup snapshot handling scripts (when needed)
  copy:
    src: "bin/{{ item }}"
    dest: "/opt/sbdi/backup/bin/{{ item }}.sh"
    owner: root
    group: root
    mode: 0755
  with_items:
    - prepare_source_snapshot.gluster
    - remove_source_snapshot.gluster
  when: gluster_backup_source

- name: Install lvm backup snapshot handling scripts (when needed)
  copy:
    src: "bin/{{ item }}"
    dest: "/opt/sbdi/backup/bin/{{ item }}.sh"
    owner: root
    group: root
    mode: 0755
  with_items:
    - prepare_source_snapshot.lvm
    - remove_source_snapshot.lvm
  when: lvm_backup_source

- name: Install cooridinating backup snapshot handling scripts
  template:
    src: "bin/{{ item }}"
    dest: "/opt/sbdi/backup/bin/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - prepare_source_snapshot
    - perform_rsync
    - remove_source_snapshot
    
- name: Install sudoers file for backupoperator
  copy:
    src: "43-backupoperator"
    dest: /etc/sudoers.d/43-backupoperator
    owner: root
    group: root
    mode: 0110
    
# Backup sources preform rsync via SSH of backup data as root -> backup targets
# Thus make sure bakup targests are known to root user:
  
# - name: Remove known_hosts file of root
#   file:
#     state: absent
#     path: /root/.ssh/known_hosts

- name: Remove previous backup targets SSH host keys for hostnames
  shell:  "ssh-keygen -R  {{ deployment_prefix }}-{{ item }}"
  ignore_errors: yes
  with_items: "{{ groups['backup_targets'] }}"
  tags:
    - host_keys

- name: Remove previous backup targets SSH host keys for fqdns
  shell:  "ssh-keygen -R {{ deployment_prefix }}-{{ item }}.{{ domain }}"
  ignore_errors: yes
  with_items: "{{ groups['backup_targets'] }}"
  tags:
    - host_keys
  
- name: Remove previous SSH host keys for ips
  shell:  "ssh-keygen -R {{ hostvars[item]['common_ip_part'] }}{{ hostvars[item]['nbr'] }}"
  ignore_errors: yes
  with_items: "{{ groups['backup_targets'] }}"    
  tags:
    - host_keys

- name: Accept backup targets SSH host keys for hostnames
  shell:  "ssh-keyscan -H {{ deployment_prefix }}-{{ item }} >> /root/.ssh/known_hosts"
  register: keyscan_result
  until: keyscan_result is succeeded
  retries: 10
  delay: 1
  with_items: "{{ groups['backup_targets'] }}"
  tags:
    - host_keys

- name: Accept backup targets SSH host keys for fqdns
  shell:  "ssh-keyscan -H {{ deployment_prefix }}-{{ item }}.{{ domain }} >> /root/.ssh/known_hosts"
  register: keyscan_result
  until: keyscan_result is succeeded
  retries: 10
  delay: 1
  with_items: "{{ groups['backup_targets'] }}"
  tags:
    - host_keys
  
- name: Accept SSH host keys for ips
  shell:  "ssh-keyscan -H {{ hostvars[item]['common_ip_part'] }}{{ hostvars[item]['nbr'] }} >> /root/.ssh/known_hosts"
  register: keyscan_result
  until: keyscan_result is succeeded
  retries: 10
  delay: 1
  with_items: "{{ groups['backup_targets'] }}"
  tags:
    - host_keys
