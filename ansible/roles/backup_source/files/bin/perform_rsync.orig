#! /bin/bash
#
# Perform rsync of source snapshot on this node to backup target
# ==============================================================
#
# 
# usage:
#   perform_rsync <options> <source_mount_point> <remote_dest> <target>
#
#   where 
#         <options> = [-v] [-t]
#             
#   -v    : verbose output - default false
#   -t    : dry run and only output info  - default false




# Read arguments and switches
verbose=''
dry_run=''


while true 
do
    case $1 in

	-v) verbose="-v"
	    shift
	    ;;
	-t) dry_run="-t"
	    shift
	    ;;
	*) break	    
	    ;;
    esac
done

source_mount_point=$1
remote_dest=$2
target=$3

rsync_flags=""


bin_dir=$(dirname $0)
lib_dir=/opt/sbdi/lib  #${SOMO_LIBDIR:-$bin_dir/../lib}

. $lib_dir/log_utils
. $lib_dir/string_utils

log_logging_application="BACKUP"

[ $EUID -eq 0 ] || log_fatal  88 "Root privileges reqiured"

[ -z "$source_mount_point" ] && log_fatal 91 "No source mount point provided"
[ -z "$remote_dest" ] && log_fatal 92 "No remote destination provided"
[ -z "$target" ] && log_fatal 93 "No target provided"

# Ensure there is one (and only one) trailing / in source dir - because of rsync semantics.
source_dir=$(str_rtrim "$source_mount_point" /)
source="${source_dir}/"


result=0

if /usr/bin/rsync -a -e /usr/bin/ssh --rsync-path="/usr/bin/sudo /usr/bin/rsync" \
      $dry_run $verbose $rsync_flags  \
      $source --delete-after backupoperator@$remote_dest:$target
then
    log_info "performed rsync $source -> backupoperator@$remote_dest:$target"
else
    error=$?
    log_error "failed to rsync $source -> backupoperator@$remote_dest:$target - error: ${error}"
    result=91
fi


exit $result
