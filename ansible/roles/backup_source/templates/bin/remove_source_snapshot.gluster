#! /bin/bash
#
# Remove source snapshot
# ======================
#
# 

# TBD

# 
# ------------------
# 
# usage:
#   remove_source_snapshot <options> 
#
#   where 
#         <options> = [-v] [-t] [-name <snapshot_name>]
#             
#   -v    : verbose output - default false
#   -t    : dry run and only output info  - default false
#   -name : snapshot name  - default {{ source_volume }}_backupsnap
#



# Read arguments and switches

verbose=''      
dry_run=''     
snapshot_name=''

while true 
do
    case $1 in

	-v) verbose="-v"
	    shift
	    ;;
	-t) dry_run="-t"
	    shift
	    ;;
	-name) snapshot_name=$2
	    shift
	    shift
	    ;;
	*) break	    
	    ;;
    esac
done


gluster_volume=docker
source_mount_point={{ source_mount_point }}

bin_dir=$(dirname $0)
lib_dir=/opt/sbdi/lib  #${SOMO_LIBDIR:-$bin_dir/../lib} 

. $lib_dir/log_utils

log_logging_application="BACKUP"

[ $EUID -eq 0 ] || log_fatal  88 "Root privileges reqiured" 



[ -z "$snapshot_name" ] && snapshot_name="${gluster_volume}_backupsnap"

result=0

if umount $source_mount_point
then
    log_info "Unounted snapshot $snapshot_name of gluster volume ${gluster_volume}"
else
    error=$?
    log_error "Failed to unmount  snapshot $snapshot_name of gluster volume ${gluster_volume} - error: ${error}"
    result=91
fi

if echo "y" | gluster snapshot deactivate $snapshot_name
then
    log_info "Deactivated snapshot ${snapshot_name} of gluster volume ${gluster_volume} "
else
    error=$?
    log_error "Failed to deactivte snapshot ${snapshot_name}  of gluster volume ${gluster_volume} - error: ${error}"
    result=92
fi

if echo "y" | gluster snapshot delete $snapshot_name
then
    log_info "Deleted snapshot $snapshot_name of gluster volume ${gluster_volume}"
else
    error=$?
    log_error "Failed to delete snapshot $snapshot_name of gluster volume ${gluster_volume} - error: ${error}"
    result=93
fi

exit $result


