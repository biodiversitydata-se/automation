grails:
    serverURL: 'https://images.{{ domain }}'
server:
    contextPath: ''
serverName: 'https://images.{{ domain }}'

hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect

dataSource:
    url: jdbc:postgresql://psqldbimage/$POSTGRES_DB?autoReconnect=true&connectTimeout=0&useUnicode=true&characterEncoding=UTF-8
    username: $POSTGRES_USER
    password: $POSTGRES_PASSWORD
    dbCreate: update
    driverClassName: org.postgresql.Driver

security:
    cas:
        casServerName: 'https://auth.{{ domain }}'
        appServerName: 'https://images.{{ domain }}'
        casServerUrlPrefix: 'https://auth.{{ domain }}/cas'
        loginUrl: 'https://auth.{{ domain }}/cas/login'
        logoutUrl: 'https://auth.{{ domain }}/cas/logout'
        bypass: false
        disableCAS: false
        contextPath: ''
    apikey:
        ip:
            whitelist: ''
        check:
            serviceUrl: https://auth.{{ domain }}/apikey/ws/check?apikey=

imageservice:
    imagestore:
        root: '/data/image-service/store'
        inbox: '/data/image-service/incoming'
    apache:
        root: 'https://images.{{ domain }}/store/'
        # space separated list
        multiple_roots: 'https://images.{{ domain }}/store/'
    exportDir: '/data/image-service/exports'
    thumbnail:
        size: 300

skin:
    layout: main
    fluidLayout: false
    favicon: "https://static.{{ domain }}/favicon.ico"
    orgNameLong: Swedish Biodiversity Data Infrastructure
    orgNameShort: SBDI
    homeUrl: "https://tools.{{ domain }}"

swagger:
    info:
        description: "API Documentation for Image Services"
        version: "2.0"
        title: "Image Service API"
        termsOfServices: "https://docs.{{ domain }}/sbdi-data/sbdi-atlas-terms-of-use/"
        contact:
            name: "Support"
            url: "https://images.{{ domain }}"
            email: "admin@mail.infrabas.se"
    schemes:
        - "HTTPS"

facets: ["recognisedLicence", "dataResourceUid", "creator", "imageSize", "fileType", "format", "dateUploadedYearMonth"]

collectory:
    baseURL: 'https://collections.{{ domain }}'
biocache:
    baseURL: 'https://records.{{ domain }}'

# Header and footer
headerAndFooter:
    baseURL: 'https://static.{{ domain }}'
    version: '2'

ala:
    baseURL: 'https://{{ domain }}'

bie:
    baseURL: 'https://species.{{ domain }}'
    searchPath: '/search'

analytics:
    credentialsJson: "/data/image-service/config/google-analytics.json"
    URL: ""
    ID: ""
    baseURL: ""
    viewID: ""

elasticsearch:
    indexName: "images"
    host: "elasticsearch"
    scheme: "http"
    port1: 9200
    port2: 9201
