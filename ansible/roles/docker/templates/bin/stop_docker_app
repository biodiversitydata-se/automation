#! /bin/bash
cd $(dirname $0)
. /opt/sbdi/lib/log_utils

log_logging_application="MGM"

[ $EUID -eq 0 ] && log_fatal 88 "Do *not* run as root"
if ! id -nG "$USER" | grep -qw "docker"
then
    log_fatal 88 "User must belong to group 'docker'"
fi

contains() {
    [[ $1 =~ (^|[[:space:]])$2($|[[:space:]]) ]] && exit(0) || exit(1)
}

export SWARM_MANAGERS="{% for host in groups['swarm_managers'] %}{{deployment_prefix}}-{{ host }} % endfor %}"

if ! contains $SWARM_MANAGERS $HOSTNAME
then
    log_fatal 89 "Must be run on a swarm manager..."
fi

USAGE="USAGE: $0 <application_name>"

export DOCKER_CTX={{ docker_ctx | default('/docker') }}

#cd ..
#application_name=${PWD##*/}

application_name=$1
if [ -z "${application_name}" ]
then
    log_fatal 91 "No application name provided. Usage: $USAGE"
fi

log_logging_application="MGM/${application_name}"

if [ ! -d ${DOCKER_CTX}/etc/${application_name} ]
then
    log_fatal 92 "Unknown application.No application found in  ${DOCKER_CTX}/etc/${application_name}"
fi

cd ${DOCKER_CTX}/etc/${application_name}

restart_httpproxy=false

if [ -e 'proxy.conf' ]
then
    proxy_conf_file="${DOCKER_CTX}/etc/httpproxy/conf.d/${application_name}.conf"
    if [ -e "${proxy_conf_file}" ]
    then
	if  rm "${proxy_conf_file}"
	then
	    restart_httpproxy=true
	    log_info "Removed  proxy conf file: ${proxy_conf_file}"
	else
	    log_warn "Failed to remove proxy conf file: ${proxy_conf_file}"
	fi
    else
	log_warn "Found no proxy conf file to remove, i.e. ${proxy_conf_file} does not exist"
    fi
fi


export CURRENT_USER=$(id -u):$(id -g)

log_info "Removing docker swarm stack ${application_name}"
if docker stack rm ${application_name}
then
    log_info "Removed docker swarm stack ${application_name} - OK"
else
    log_fatal 96 "Failed to remove docker swarm stack ${application_name}"
fi

if $restart_httpproxy
then
    # TODO: check if httpproxy is installed
    # TODO: logging and exit codes
    ${DOCKER_CTX}/usr/httpproxy/bin/restart.sh
fi
