- name: Add docker repo key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    
- name: Add docker repo
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    state: present
    
- name: Install basic packages
  apt:
    pkg:
    - docker-ce
    - python3-pip
#    - python3-jsondiff
#    - python3-docker


- name: Install basic python packages
  pip:
    name:
    - docker
    - jsondiff
    - pyyaml

- name: Load kernel module ip_vs (seems to be neded by swarm)
  modprobe:
    name: ip_vs
    state: present
    
- name: Ensure module ip_vs is loded at reboot
  ansible.builtin.lineinfile:
    path: /etc/modules
    regexp: '^ip_vs'
    line: ip_vs
   
- name: Download and install docker compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64"
    timeout: 30
    dest: /usr/local/bin/docker-compose
    owner: root
    mode: 0755
    
- name: "Check if the directory /docker/var/lib/{{ host_name }} exists"
  stat:
    path: "/docker/var/lib/{{host_name}}"
  register: docker_var_lib_stat
    
- name: "Make sure the directory /docker/var/lib/{{ host_name }} exists"
  file:
    path: "/docker/var/lib/{{host_name}}"
    owner: root
    group: root
    mode: 0750
    recurse: yes
    state: directory
  when: not docker_var_lib_stat.stat.exists
  
- name: copy Docker daemon config
  template:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0664
  notify:
    - restart docker
  tags:
    - daemon_json
    
- name: Add admin users to docker group
  user:
    name: '{{ item.key }}'
    groups: docker
    append: yes
  with_dict: "{{ admin_users }}"
  when: item.value['state'] == "present"
  notify:
    - restart docker
    
- name: Ensure /opt/sbdi folder
  file: 
    path: /opt/sbdi
    owner: root 
    group: root
    mode: 0755 
    state: directory

- name: Ensure /opt/sbdi/bin folder
  file: 
    path: /opt/sbdi/bin
    owner: root 
    group: root
    mode: 0755 
    state: directory

- name: Copy docker (template) maintenance scripts
  template:
    src: "bin/{{ item }}"
    dest: /opt/sbdi/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - list_docker_apps
    - start_docker_app
    - stop_docker_app
    
- name: Copy docker maintenance scripts
  copy:
    src: "bin/{{ item }}"
    dest: /opt/sbdi/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - service_exec
