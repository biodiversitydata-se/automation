- name: Unmount lvm device
  mount:
    path: /mnt
    src: "{{ lvm_device }}"
    state: absent

  # Note! This might be crude. If lvm_device is a volume there just might be
  # an ephemerial disk with dos mounted on /mnt.
  # In that case we are now unmounting that ephemerial disk...
  # Perhaps it should be left as it is since we will not do anything else with it
  # TODO: Fix a check!
  
- name: Read lvm device information (always use unit when probing)
  parted: "device={{ lvm_device }} unit=MiB"
  register: lvm_device_info
# - name: Output disks
#   debug:
#     msg: "{{ lvm_device_info }}"
- name: Remove all partitions from lvm device - if not already only lvm
  parted:
    device: "{{ lvm_device }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
   - "{{ lvm_device_info.partitions }}"
  when: not (((lvm_device_info['partitions'] | length) == 1) and ('lvm' in lvm_device_info['partitions'][0]['flags']))     
- name: Ensure lvm  partition on lvm device
  parted:
    device: "{{ lvm_device }}"
    number: 1
    flags: [ lvm ]
    state: present
  when: not (((lvm_device_info['partitions'] | length) == 1) and ('lvm' in lvm_device_info['partitions'][0]['flags']))     
- name: Reboot the machine (workarround for bug in sticky mount)
  reboot:    
- name: Create a volume group for storage of Docker config and volumes (vg_docker)
  lvg:
    vg: vg_docker
    pvs: "{{ lvm_device }}1"
    pesize: 16
    force: yes
    state: present
- name: Create an lvm volume for storage of Docker config and volumes (lv_docker)
  community.general.lvol:
    vg: vg_docker
    lv: lv_docker
    size: 80%VG
    force: yes
- name: Format the thin volume for docker data with xfs
  community.general.filesystem:
    fstype: xfs
    dev: /dev/vg_docker/lv_docker
    opts: -i size=512
- name: Check if mount point for docker data "/docker" exists
  stat:
    path: /docker
  register: docker_mount_point
- name: Create  mount point for docker data "/docker"
  file:
    path: /docker
    state: directory
    owner: root
    group: root
    mode: 0775
    recurse: yes
  when: docker_mount_point.stat.exists == false    
- name: Mount volume lv_docker_volume at /docker
  ansible.posix.mount:
    src: /dev/vg_docker/lv_docker
    fstype: xfs
    path: /docker
    state: mounted
- name: Make sure the "/docker" mount point has the correct access rights
  file:
    path: /docker
    owner: root
    group: root
    mode: 0755
    state: directory
- name: Make sure the "/docker" mount point has the correct subdirectories for deployment 
  file:
    path: "/docker/{{item}}"
    owner: root
    group: root
    mode: 0755
    recurse: yes
    state: directory
  with_items:
    - etc
    - usr
    - var
    - var/volumes
    - var/backup