- name: Unmount lvm device
  mount:
    path: /mnt
    src: "{{ lvm_device }}"
    state: absent
- name: Read lvm device information (always use unit when probing)
  parted: "device={{ lvm_device }} unit=MiB"
  register: sdb_info
- name: Output disks
  debug:
    msg: "{{ sdb_info }}"
- name: Remove all partitions from lvm device - if not already only lvm
  parted:
    device: "{{ lvm_device }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
   - "{{ sdb_info.partitions }}"
  when: not (((sdb_info['partitions'] | length) == 1) and ('lvm' in sdb_info['partitions'][0]['flags']))     
- name: Ensure lvm  partition on lvm device
  parted:
    device: "{{ lvm_device }}"
    number: 1
    flags: [ lvm ]
    state: present
  when: not (((sdb_info['partitions'] | length) == 1) and ('lvm' in sdb_info['partitions'][0]['flags']))     
- name: Reboot the machine (workarround for bug in sticky mount)
  reboot:    
- name: Create a volume group for storage of Docker config and volumes (vg_docker)
  lvg:
    vg: vg_docker
    pvs: "{{ lvm_device }}1"
    pesize: 16
    force: yes
    state: present
- name: Create a thin lvm pool for storage of Docker config and volumes (tp_docker)
  community.general.lvol:
    vg: vg_docker
    thinpool: tp_docker
    size: 80%VG
- name: Create a thin lvm volume for storage of Docker config and volumes (tlv_docker)
  community.general.lvol:
    vg: vg_docker
    lv: tlv_docker
    thinpool: tp_docker
    size: 100G
- name: Format the thin volume for docker data with xfs
  community.general.filesystem:
    fstype: xfs
    dev: /dev/vg_docker/tlv_docker
    opts: -i size=512
- name: Create export mount point /export/docker
  file:
    path: /export/docker
    state: directory
    owner: root
    group: root
    mode: 0775
#    recurse: yes
- name: Mount thin volume tlv_docker_volume at /export/docker
  ansible.posix.mount:
    src: /dev/vg_docker/tlv_docker
    fstype: xfs
    path: /export/docker
    state: mounted
